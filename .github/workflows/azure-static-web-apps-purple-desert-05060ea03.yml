name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  test:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    name: Lint and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn test
  cypress-run:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    name: Cypress run
    runs-on: ubuntu-20.04
    container: cypress/browsers:node14.17.0-chrome88-ff89
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [ 1 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          install-command: yarn --frozen-lockfile --silent
          build: yarn build
          start: yarn start
          # quote the url to be safe against YML parsing surprises
          wait-on: 'http://localhost:3000'
          browser: chrome
          record: false
          parallel: false

        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_KEY }}
          # auto generated GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_PUBLIC_APP_ENV: test
          CYPRESS_RELEASE_VERSION: ${{ (github.event_name == 'pull_request' && 'full') || ('mvp') }}
          NATIONAL_GAS_EMERGENCY_SERVICE_TELEPHONE_NUMBER: "0800 111 999"
          NATIONAL_GAS_EMERGENCY_SERVICE_TEXTPHONE_NUMBER: "0800 371 787"
          COUNCIL_WEBSITE_HOMEPAGE_URL: "https://www.newark-sherwooddc.gov.uk"

  terraform:
    name: 'Terraform'
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: './terraform'

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform fmt
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend-config="storage_account_name=${{secrets.STORAGE_ACCOUNT_NAME}}" -backend-config="resource_group_name=${{secrets.RESOURCE_GROUP_NAME}}" -backend-config="container_name=${{secrets.CONTAINER_NAME}}" -backend-config="key=${{secrets.STORAGE_ACCOUNT_KEY}}"

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -var="storage_account_name=${{secrets.STORAGE_ACCOUNT_NAME}}" -var="resource_group_name=${{secrets.RESOURCE_GROUP_NAME}}" -var="container_name=${{secrets.CONTAINER_NAME}}" -var="key=${{secrets.STORAGE_ACCOUNT_KEY}}" -var="resource_group_location=${{secrets.RESOURCE_GROUP_LOCATION}}" -var="static_site_name=${{secrets.STATIC_SITE_NAME}}"

      - name: Terraform Apply
        id: terraform_apply
        run: |
          terraform apply -auto-approve -var="storage_account_name=${{secrets.STORAGE_ACCOUNT_NAME}}" -var="resource_group_name=${{secrets.RESOURCE_GROUP_NAME}}" -var="container_name=${{secrets.CONTAINER_NAME}}" -var="key=${{secrets.STORAGE_ACCOUNT_KEY}}" -var="resource_group_location=${{secrets.RESOURCE_GROUP_LOCATION}}" -var="static_site_name=${{secrets.STATIC_SITE_NAME}}"
          terraform apply -auto-approve -var="storage_account_name=${{secrets.STORAGE_ACCOUNT_NAME}}" -var="resource_group_name=${{secrets.RESOURCE_GROUP_NAME}}" -var="container_name=${{secrets.CONTAINER_NAME}}" -var="key=${{secrets.STORAGE_ACCOUNT_KEY}}" -var="resource_group_location=${{secrets.RESOURCE_GROUP_LOCATION}}" -var="static_site_name=${{secrets.STATIC_SITE_NAME}}"

  build_and_deploy_job:
    # needs: [test, cypress-run, terraform]
    needs: [terraform]
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up sentry cli
        run: |
          touch .sentryclirc
          echo "[auth]" >> .sentryclirc
          echo "token=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .sentryclirc
          cp .sentryclirc api/.sentryclirc

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{secrets.AZURE_STATIC_WEB_APPS_API_TOKEN}}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # App source code path
          api_location: "api" # Api source code path - optional
          app_artifact_location: 'public' # Built app content directory - optional
          output_location: "out" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######
        env:
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          NEXT_PUBLIC_APP_ENV: ${{ (github.event_name == 'pull_request' && 'staging') || ('production') }}
          RELEASE_VERSION: ${{ (github.event_name == 'pull_request' && 'full') || ('mvp') }}
          ###### Local Authority Configurable Content - These values can be configured to be the specific to the local authority ######
          NATIONAL_GAS_EMERGENCY_SERVICE_TELEPHONE_NUMBER: ${{ secrets.NATIONAL_GAS_EMERGENCY_SERVICE_TELEPHONE_NUMBER }}
          NATIONAL_GAS_EMERGENCY_SERVICE_TEXTPHONE_NUMBER: ${{ secrets.NATIONAL_GAS_EMERGENCY_SERVICE_TEXTPHONE_NUMBER }}
          CUSTOMER_SERVICES_TELEPHONE_NUMBER: ${{ secrets.CUSTOMER_SERVICES_TELEPHONE_NUMBER }}
          OUT_OF_HOURS_CUSTOMER_SERVICES_TELEPHONE_NUMBER: ${{ secrets.OUT_OF_HOURS_CUSTOMER_SERVICES_TELEPHONE_NUMBER }}
          COUNCIL_WEBSITE_HOMEPAGE_URL: ${{ secrets.COUNCIL_WEBSITE_HOMEPAGE_URL }}
          # Opening times, only one of these is required. See documentation for further information:
          CUSTOMER_SERVICES_OPENING_TIMES_SIMPLIFIED: ${{ secrets.CUSTOMER_SERVICES_OPENING_TIMES_SIMPLIFIED }}
          CUSTOMER_SERVICES_OPENING_TIMES_FULL_DESCRIPTION: ${{ secrets.CUSTOMER_SERVICES_OPENING_TIMES_FULL_DESCRIPTION }}
          ###### End of Local Authority Configurable Content ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{secrets.AZURE_STATIC_WEB_APPS_API_TOKEN}}
          action: 'close'
